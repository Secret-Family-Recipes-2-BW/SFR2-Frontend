{"ast":null,"code":"var _jsxFileName = \"/home/me/lambda/updates/SFR2-Frontend/secret_family_recipes/src/components/UserRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeCard from './RecipeCard';\nimport axios from \"axios\";\nimport { getRecipes } from \"../actions/recipesActions\";\nimport { connect } from \"react-redux\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport RecipeForm from './RecipeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserRecipes(props) {\n  _s();\n\n  // const [userRecipeList, setUserRecipeList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    props.getRecipes(props.user.id);\n  }, []);\n\n  const handleChange = evt => {\n    setSearchTerm(evt.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    let currentList = [];\n    let newList = [];\n\n    if (searchTerm !== '') {\n      currentList = props.recipes;\n      newList = currentList.filter(item => {\n        let listItem = item.title.toLowerCase();\n        return listItem.includes(searchTerm);\n      });\n    } else {\n      newList = props.recipes;\n    }\n\n    ;\n    setFilteredList(newList);\n  }, [searchTerm, props.recipes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        placeholder: \"Search by keyword\",\n        onChange: handleChange,\n        className: \"searchBar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userRecipes container\",\n      children: filteredList.map(item => {\n        return /*#__PURE__*/_jsxDEV(RecipeCard, {\n          editable: true,\n          item: item,\n          makingChanges: props.makingChanges\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe form\",\n      children: /*#__PURE__*/_jsxDEV(RecipeForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserRecipes, \"AMh7sw++4HmhZrgeygvmB4DHD2A=\");\n\n_c = UserRecipes;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipesReducer.recipes,\n    makingChanges: state.recipesReducer.makingChanges,\n    user: state.accountReducer.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRecipes\n})(UserRecipes);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRecipes\");","map":{"version":3,"sources":["/home/me/lambda/updates/SFR2-Frontend/secret_family_recipes/src/components/UserRecipes.js"],"names":["React","useState","useEffect","RecipeCard","axios","getRecipes","connect","axiosWithAuth","RecipeForm","UserRecipes","props","filteredList","setFilteredList","searchTerm","setSearchTerm","user","id","handleChange","evt","target","value","toLowerCase","currentList","newList","recipes","filter","item","listItem","title","includes","map","makingChanges","mapStateToProps","state","recipesReducer","accountReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RecipeCard from './RecipeCard';\nimport axios from \"axios\";\nimport { getRecipes } from \"../actions/recipesActions\";\nimport { connect } from \"react-redux\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport RecipeForm from './RecipeForm';\n\n\nfunction UserRecipes(props) {\n  // const [userRecipeList, setUserRecipeList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    props.getRecipes(props.user.id);\n    \n  }, []);\n\nconst handleChange = (evt) => {\n  setSearchTerm(evt.target.value.toLowerCase());\n}\n\nuseEffect(()=> {\nlet currentList = [];\nlet newList = [];\n\nif(searchTerm !== ''){\n  currentList = props.recipes;\n  newList = currentList.filter(item => {\n    let listItem = item.title.toLowerCase();\n    return listItem.includes(searchTerm);\n  });\n}else {\n    newList = props.recipes; \n};\n  setFilteredList(newList);\n}, [searchTerm, props.recipes])\n\n  return (\n    <>\n    <div className='searchContainer'>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          placeholder=\"Search by keyword\"\n          onChange={handleChange}\n          className=\"searchBar\"\n        />\n      </div>\n      \n      <div className=\"userRecipes container\">\n        {filteredList.map((item) => {\n          return (\n            <RecipeCard\n              editable={true}\n              item={item}\n              key={item.id}\n              makingChanges={props.makingChanges}\n            />\n          );\n        })}\n      </div>\n\n      <div className=\"recipe form\">\n        <RecipeForm />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipesReducer.recipes,\n    makingChanges: state.recipesReducer.makingChanges,\n    user: state.accountReducer.user\n  };\n};\n\nexport default connect(mapStateToProps, { getRecipes })(UserRecipes);"]},"metadata":{},"sourceType":"module"}