{"ast":null,"code":"var _jsxFileName = \"/home/me/lambda/updates/SFR2-Frontend/secret_family_recipes/src/components/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport recipeSchema from \"./validation/RecipeSchema\";\nimport Ingredient from \"./Ingredient\";\nimport { addRecipes } from \"../actions/recipesActions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultIngredientObj = {\n  ingredient: \"\",\n  quantity: \"\"\n};\nconst defaultData = {\n  private: false,\n  image_url: \"\",\n  title: \"\",\n  categories: [\"\"],\n  source: \"\",\n  ingredients: [],\n  instructions: [\"\"]\n};\n\nfunction RecipeForm(props) {\n  _s();\n\n  console.log(\"HERE\");\n  const [formData, setFormData] = useState(defaultData);\n  const [formErrors, setFormErrors] = useState([\"\"]);\n  const [disabled, setDisabled] = useState(false);\n  const {\n    setEdit\n  } = props;\n  useEffect(() => {\n    setFormData({\n      private: props.private,\n      title: props.title,\n      categories: props.categories,\n      source: props.source,\n      ingredients: props.ingredients,\n      instructions: props.instructions\n    });\n  }, []);\n\n  function updateFormArray(e, index) {\n    const {\n      name,\n      value\n    } = e.target;\n    const newArr = [...formData[name]];\n    newArr[index] = value;\n    throwErrors(name, value);\n    setFormData({ ...formData,\n      [name]: newArr\n    });\n  }\n\n  function updateForm(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    throwErrors(name, value);\n    setFormData({ ...formData,\n      [name]: value\n    });\n  } ///Add ingredient input field\n\n\n  function addIngredient(e) {\n    e.preventDefault();\n    setFormData({ ...formData,\n      ingredients: [...formData.ingredients, defaultIngredientObj]\n    });\n  }\n\n  function addCategory(e) {\n    e.preventDefault();\n    setFormData({ ...formData,\n      categories: [...formData.categories, \"\"]\n    });\n  } ///get an updated array of ingredients without manipulating state\n\n\n  function newIngredients(ingredientObj, index) {\n    const result = [...formData.ingredients];\n    result[index] = ingredientObj;\n    return result;\n  } ///actually change the ingredients array in the form\n\n\n  function updateIngredients(index, ingredientObj) {\n    const updatedIngredients = newIngredients(ingredientObj, index);\n    throwErrors('ingredients', updatedIngredients);\n    setFormData({ ...formData,\n      ingredients: updatedIngredients\n    });\n  } //watch for changes to ingredientObj, and update the formData with it\n  //VALIDATION\n\n\n  const throwErrors = (name, value) => {\n    yup.reach(recipeSchema, name).validate(value).then(valid => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      console.log(err);\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  }; //catch changes and validate. Disable/Enable submit button accordingly\n\n\n  useEffect(() => {\n    recipeSchema.isValid(formData).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formData]); //END VALIDATION\n  //Network Request\n\n  function submit(e) {\n    e.preventDefault();\n    props.addRecipes(formData);\n    setEdit(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"recipeform\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Recipe Title:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: updateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Source:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"source\",\n          value: formData.source,\n          onChange: updateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Categories:\\xA0\", formData.categories && formData.categories.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"categories\",\n            value: formData.categories[index],\n            onChange: e => updateFormArray(e, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCategory,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ingredients:\\xA0\", formData.ingredients && formData.ingredients.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Ingredient, {\n            item: item,\n            updateForm: updateForm,\n            add: addIngredient,\n            index: index,\n            updateIngredients: updateIngredients\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addIngredient,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Instructions:\\xA0\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"7\",\n          cols: \"70\",\n          name: \"instructions\",\n          value: formData.instructions[0],\n          onChange: e => updateFormArray(e, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sharing:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Public:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"shared\",\n          type: \"radio\",\n          checked: formData.private,\n          onChange: () => setFormData({ ...formData,\n            private: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sharing\",\n          children: [\"Private:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"shared\",\n            type: \"radio\",\n            checked: !formData.private,\n            onChange: () => setFormData({ ...formData,\n              private: false\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formErrors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formErrors.categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formErrors.ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formErrors.instructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: disabled,\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeForm, \"b4gcvWxHzM0I7CEmqrYiP69uH84=\");\n\n_c = RecipeForm;\nexport default connect(null, {\n  addRecipes\n})(RecipeForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/home/me/lambda/updates/SFR2-Frontend/secret_family_recipes/src/components/EditForm.js"],"names":["React","useState","useEffect","yup","recipeSchema","Ingredient","addRecipes","connect","defaultIngredientObj","ingredient","quantity","defaultData","private","image_url","title","categories","source","ingredients","instructions","RecipeForm","props","console","log","formData","setFormData","formErrors","setFormErrors","disabled","setDisabled","setEdit","updateFormArray","e","index","name","value","target","newArr","throwErrors","updateForm","addIngredient","preventDefault","addCategory","newIngredients","ingredientObj","result","updateIngredients","updatedIngredients","reach","validate","then","valid","catch","err","errors","isValid","submit","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\n\nimport recipeSchema from \"./validation/RecipeSchema\";\nimport Ingredient from \"./Ingredient\";\nimport { addRecipes } from \"../actions/recipesActions\";\nimport { connect } from \"react-redux\";\n\nconst defaultIngredientObj = { ingredient: \"\", quantity: \"\" };\n\nconst defaultData = {\n  private: false,\n  image_url: \"\",\n  title: \"\",\n  categories: [\"\"],\n  source: \"\",\n  ingredients: [],\n  instructions: [\"\"],\n};\n\nfunction RecipeForm(props) {\n\n  console.log( \"HERE\" );\n  const [formData, setFormData] = useState(defaultData);\n  const [formErrors, setFormErrors] = useState([\"\"]);\n  const [disabled, setDisabled] = useState(false);\n  const { setEdit } = props;\n \n  useEffect(() => {\n    setFormData({private: props.private,\n                 title: props.title,\n                 categories: props.categories,\n                 source: props.source,\n                 ingredients: props.ingredients,\n                 instructions: props.instructions,\n  })}, [])\n\n  function updateFormArray(e, index) {\n    const { name, value } = e.target;\n    const newArr = [...formData[name]];\n    newArr[index] = value;\n\n    throwErrors(name, value);\n    setFormData({...formData, [name]: newArr})\n\n  }\n\n  function updateForm(e) {\n    const { name, value } = e.target;\n    throwErrors(name, value);\n    setFormData({ ...formData, [name]: value });\n  }\n  ///Add ingredient input field\n  function addIngredient(e) {\n    e.preventDefault();\n    setFormData({\n      ...formData,\n      ingredients: [...formData.ingredients, defaultIngredientObj],\n    });\n  }\n\n  function addCategory(e) {\n    e.preventDefault();\n    setFormData({ ...formData, categories: [...formData.categories, \"\"] });\n  }\n\n  ///get an updated array of ingredients without manipulating state\n  function newIngredients(ingredientObj, index) {\n    const result = [...formData.ingredients];\n    result[index] = ingredientObj;\n    return result;\n  }\n  ///actually change the ingredients array in the form\n  function updateIngredients(index, ingredientObj) {\n    const updatedIngredients = newIngredients(ingredientObj, index);\n    throwErrors('ingredients', updatedIngredients)\n    setFormData({\n      ...formData,\n      ingredients: updatedIngredients\n    });\n  }\n  //watch for changes to ingredientObj, and update the formData with it\n\n  //VALIDATION\n  const throwErrors = (name, value) => {\n    yup\n      .reach(recipeSchema, name)\n      .validate(value)\n      .then((valid) => {\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\",\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0],\n        });\n      });\n  };\n\n  //catch changes and validate. Disable/Enable submit button accordingly\n  useEffect(() => {\n    recipeSchema.isValid(formData).then((valid) => {\n      setDisabled(!valid);\n    });\n  }, [formData]);\n  //END VALIDATION\n\n  //Network Request\n  function submit(e) {\n    e.preventDefault();\n    props.addRecipes(formData);\n    setEdit(false);\n  }\n\n  return (\n    <form className=\"recipeform\">\n      <div className=\"meta\">\n        <h2>Add a Recipe</h2> \n        <label>\n          Recipe Title:&nbsp;\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={formData.title}\n            onChange={updateForm}\n          />\n        </label>\n        <label>Source:&nbsp;\n          <input \n            type=\"text\"\n            name=\"source\"\n            value={formData.source}\n            onChange={updateForm}\n          />\n        </label>\n        <label>\n          Categories:&nbsp;\n          {formData.categories &&\n           formData.categories.map((item, index) => {\n            return (\n              <input\n                type=\"text\"\n                name=\"categories\"\n                value={formData.categories[index]}\n                onChange={(e) => updateFormArray(e, index)}\n                key={index}\n              />\n            );\n          })}\n          <button onClick={addCategory}>Add</button>\n        </label>\n      </div>\n      <div className=\"ingredients\">\n        <label>\n          Ingredients:&nbsp;\n          {/*<Ingredient />*/}\n          {formData.ingredients &&\n           formData.ingredients.map((item, index) => {\n            return (\n              <Ingredient\n                item={item}\n                updateForm={updateForm}\n                add={addIngredient}\n                key={index}\n                index={index}\n                updateIngredients={updateIngredients}\n              />\n            );\n          })}\n          <button onClick={addIngredient}>Add</button>\n        </label>\n      </div>\n      <div className=\"instructions\">\n        <label>\n          Instructions:&nbsp;\n          <textarea\n            rows=\"7\"\n            cols=\"70\"\n            name=\"instructions\"\n            value={formData.instructions[0]}\n            onChange={(e) => updateFormArray(e, 0)}\n          />\n        </label>\n      </div>\n      <div className=\"submission\">\n        <h3>Sharing:</h3>\n        <label>\n          Public:&nbsp;\n          <input\n            name=\"shared\"\n            type=\"radio\"\n            checked={formData.private}\n            onChange={() => setFormData({ ...formData, private: true })}\n          />\n        </label>\n        <label> \n          <div className=\"sharing\">\n            Private:&nbsp;\n            <input\n              name=\"shared\"\n              type=\"radio\"\n              checked={!formData.private}\n              onChange={() => setFormData({ ...formData, private: false })}\n            />\n          </div>\n        </label>\n      </div>\n      <p>{formErrors.title}</p>\n      <p>{formErrors.categories}</p>\n      <p>{formErrors.ingredients}</p>\n      <p>{formErrors.instructions}</p>\n\n      <button disabled={disabled} onClick={submit}>\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default connect(null, { addRecipes })(RecipeForm);"]},"metadata":{},"sourceType":"module"}